version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4
    working_directory: ~/repo
    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: mvn dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}



      # run tests!

  test:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - Testing
      - run:
          name: MVN TEST
          command:  sh 'mvn test'


workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test





































#version: 2
#jobs:
#  build:
#    docker:
#      - image: circleci/openjdk:8-jdk
#
#    working_directory: ~/repo
#
#    environment:
#      # Customize the JVM maximum heap limit
#      MAVEN_OPTS: -Xmx3200m
#
#    steps:
#      - checkout
#
#      # Download and cache dependencies
#
#      - restore_cache:
#          keys:
#            - v1-dependencies-{{ checksum "pom.xml" }}
#            # fallback to using the latest cache if no exact match is found
#            - v1-dependencies-
#
#      - run:
#          name: mvn dependency
#          command: mvn dependency:go-offline
#      - run:
#          name: Create Package
#          command: echo "master"
#
#      - save_cache:
#          paths:
#            - ~/.m2
#          key: v1-dependencies-{{ checksum "pom.xml" }}
#
#  test:
#    docker:
#      - image: circleci/openjdk:8-jdk
#    steps:
#      - Testing
#      - run: mvn integration-test
#      - run:
#          name: Test Finished
#          command:  echo "test finished"
#
#workflows:
#  version: 2
#  build_and_test:
#    jobs:
#      - build
#      - test